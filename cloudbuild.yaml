steps:
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 
           'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:$COMMIT_SHA', 
           '.']
    id: docker-build-step
    waitFor: ['-'] 
  - name: 'gcr.io/cloud-builders/wget'
    args: ['-qO', 'yq', 'https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64']
  - name: 'ubuntu'
    args: ['chmod', 'a+x','yq']
  - name: 'ubuntu'
    args: ['ls', '-l' ]
  - name: 'ubuntu'
    args: ['./yq']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull' , 'arminc/clair-local-scan']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull' , 'arminc/clair-db']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['images']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['run' ,'-d','--name','clair-db', 'arminc/clair-db:latest']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['run' ,'-p','6060:6060','--link','clair-db:postgres','-d','--name','clair', 'arminc/clair-local-scan:latest']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['ps']
  # Step 3: Install Clair Scanner (if not already installed)
  - name: 'gcr.io/cloud-builders/git'
    args: ['clone', 'https://github.com/arminc/clair-scanner.git']
    dir: '/workspace'

  # Step 4: Run Clair Scanner against the Docker image
  - name: 'gcr.io/mcmp-integration-qa/clair-scanner'
    args: [
      '--clair="http://127.0.0.1:6060"', # Replace with the Clair server URL
      '--report="/workspace/clair-report.json"',
      'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:$COMMIT_SHA'
    ]

  # Step 5: Print the Clair scan report
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'cat'
    args: ['/workspace/clair-report.json']

  # Step 6: (Optional) Fail the build if critical vulnerabilities are found
  # Adjust the severity level based on your requirements.
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['secrets', 'versions', 'access', 'latest', '--secret="clair-threshold"']
    secretEnv: ['_CLAIR_THRESHOLD']

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        _THRESHOLD=${_CLAIR_THRESHOLD:-"High"}  # Default to failing on High severity vulnerabilities
        if [[ "$(jq -r '.vulnerabilities[] | select(.Severity >= "'"$_THRESHOLD"'") | .Severity' /workspace/clair-report.json)" ]]; then
          echo "Failing the build due to critical vulnerabilities found.";
          exit 1;
        else
          echo "No critical vulnerabilities found. Continuing with the build.";
        fi
    secretEnv: ['_CLAIR_THRESHOLD']

  # Docker Push step
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 
           'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:latest']
substitutions:
  _CLAIR_THRESHOLD: "High"  
