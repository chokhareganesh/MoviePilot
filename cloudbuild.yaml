steps:
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 
           'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:${COMMIT_SHA}', 
           '.']
    id: docker-build-step
    waitFor: ['-'] 
  - name: 'gcr.io/cloud-builders/wget'
    args: ['-qO', 'yq', 'https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64']
  - name: 'ubuntu'
    args: ['chmod', 'a+x','yq']
  - name: 'ubuntu'
    args: ['ls', '-l' ]
  - name: 'ubuntu'
    args: ['./yq']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull' , 'arminc/clair-local-scan']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull' , 'arminc/clair-db']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['images']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['run' ,'-d','--name','clair-db', 'arminc/clair-db:latest']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['run' ,'-p','6060:6060','--link','clair-db:postgres','-d','--name','clair', 'arminc/clair-local-scan:latest']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['ps']
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y wget
        apt-get update && apt-get install -y curl
        _DOCKER_GATEWAY=$(docker network inspect bridge --format "{{range .IPAM.Config}}{{.Gateway}}{{end}}")
        echo $_DOCKER_GATEWAY
        wget -qO clair-scanner https://github.com/arminc/clair-scanner/releases/download/v8/clair-scanner_linux_amd64 && chmod +x clair-scanner ./clair-scanner --ip=$(docker network inspect bridge --format "{{range .IPAM.Config}}{{.Gateway}}{{end}}") us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:${COMMIT_SHA} || exit 0
  - id: Docker images
    name: 'gcr.io/cloud-builders/docker'
    args: ['image',  'ls']
  - id: list files
    name: 'bash'
    script: |
      ls -l
  # Docker Push step
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 
           'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:${COMMIT_SHA}']
artifacts:
  objects:
    location: 'gs://clair_scan_report_bucket'
    paths: ['report.json']
options:
  logging: CLOUD_LOGGING_ONLY
