steps:
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 
           'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/app-image:${COMMIT_SHA}', 
           '.']
    id: docker-build
    waitFor: ['-'] 
  - name: 'gcr.io/cloud-builders/wget'
    args: ['-qO', 'yq', 'https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64']
  - name: 'ubuntu'
    args: ['chmod', 'a+x','yq']
  - name: 'ubuntu'
    args: ['ls', '-l' ]
  - name: 'ubuntu'
    args: ['./yq']
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker pull arminc/clair-local-scan
        docker pull arminc/clair-db
        docker images
        docker run -d --name clair-db arminc/clair-db:latest
        docker run -p 6060:6060 --link clair-db:postgres -d --name clair arminc/clair-local-scan:latest
        docker ps
    id: clair-install-scan
    waitFor: ['docker-build']
- name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        sudo curl -L https://github.com/arminc/clair-scanner/releases/download/v12/clair-scanner_linux_amd64 -o /usr/bin/clair-scanner
        sudo chmod 777 /usr/bin/clair-scanner
        clair-scanner -h
        ls
        docker images
        HOST_IP=$(ip -4 addr show docker0 | grep -Po 'inet \K[\d.]+')
        echo $HOST_IP
        clair-scanner -c http://localhost:6060 --ip ${HOST_IP} --report="report.json" -t "Critical" mynodeapp:latest

#sdocker run --rm -v [YOUR_CACHE_DIR]:/root/.cache/ aquasec/trivy:0.18.3 [YOUR_IMAGE_NAME]
  - id: Docker images
    name: 'gcr.io/cloud-builders/docker'
    args: ['image',  'ls']

  # - id: Trivy scan

  #   name: 'gcr.io/cloud-builders/docker'
  #   # args: ['run','-u','root', '--rm', '-v', '/workspace:/root/.cache/', 'aquasec/trivy:0.18.3', 'image', 'petstore-image:latest']
  #   args: ['run -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image petstore-image']
  - id: list files
    name: 'bash'
    script: |
      ls -l

  # Docker Push step
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 
           'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/app-image:${COMMIT_SHA}']
    id: docker-image-push
  # Deploy docker image to CloudRun
  # - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  #   entrypoint: 'gcloud'
  #   args: ['run','deploy','petstore-cloudrun-deploy','--image','us-central1-docker.pkg.dev/mcmp-integration-qa/petstoreapp/petstore-image:${COMMIT_SHA}','--region','us-central1','--platform','managed','--allow-unauthenticated']
  #   env:
  #     - 'CLOUDSDK_COMPUTE_REGION=us-central1'
  #     - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  #Storing scan reports to GCS bucket
# artifacts:
#   objects:
#     location: 'gs://trivy_scan_reports_bucket'
#     paths: ['report.json']
    
    
  
options:
  logging: CLOUD_LOGGING_ONLY
