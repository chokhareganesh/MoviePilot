steps:
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 
           'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:$COMMIT_SHA', 
           '.']
    id: docker-build-step
    waitFor: ['-'] 
  - name: 'gcr.io/cloud-builders/wget'
    args: ['-qO', 'yq', 'https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64']
  - name: 'ubuntu'
    args: ['chmod', 'a+x','yq']
  - name: 'ubuntu'
    args: ['ls', '-l' ]
  - name: 'ubuntu'
    args: ['./yq']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull' , 'arminc/clair-local-scan']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull' , 'arminc/clair-db']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['images']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['run' ,'-d','--name','clair-db', 'arminc/clair-db:latest']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['run' ,'-p','6060:6060','--link','clair-db:postgres','-d','--name','clair', 'arminc/clair-local-scan:latest']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['ps']
  # Step 3: Install Clair Scanner (if not already installed)
  - name: 'gcr.io/cloud-builders/git'
    args: ['clone', 'https://github.com/arminc/clair-scanner.git']
    dir: '/workspace'

  # Step 4: Run Clair Scanner against the Docker image
  - name: 'gcr.io/mcmp-integration-qa/clair-scanner'
    args:
      - '--clair="http://clair-service-host:clair-service-port"'  # Replace with the Clair server URL
      - '--report="/workspace/clair-report.json"'
      - 'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:$COMMIT_SHA'

  # Step 5: Check for vulnerabilities and fail the pipeline for critical vulnerabilities
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Read the Clair scan report and check for vulnerabilities with severity levels
        if grep -q "\"Sev\": \"Critical\"" /workspace/clair-report.json; then
          echo "Critical vulnerabilities found. Failing the pipeline."
          exit 1
        else
          echo "No critical vulnerabilities found. Proceeding to push the image to Artifact Registry."
        fi

  # Docker Push step
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 
           'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:latest']
substitutions:
  _CLAIR_THRESHOLD: "High"  
