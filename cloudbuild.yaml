steps:
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 
           'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:latest', 
           '.']
    id: docker-build-step
    waitFor: ['-'] 
  - name: 'gcr.io/cloud-builders/wget'
    args: ['-qO', 'yq', 'https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64']
  - name: 'ubuntu'
    args: ['chmod', 'a+x','yq']
  - name: 'ubuntu'
    args: ['ls', '-l' ]
  - name: 'ubuntu'
    args: ['./yq']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull' , 'arminc/clair-local-scan']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull' , 'arminc/clair-db']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['images']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['run' ,'-d','--name','clair-db', 'arminc/clair-db:latest']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['run' ,'-p','6060:6060','--link','clair-db:postgres','-d','--name','clair', 'arminc/clair-local-scan:latest']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['ps']
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y wget
        apt-get update && apt-get install -y curl
        apt install sudo
        apt install net-tools
        apt install -y apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
        apt update
        apt install -y docker-ce docker-ce-cli containerd.io
        systemctl start docker
        systemctl enable docker
        docker --version
        docker pull arminc/clair-local-scan
        docker pull arminc/clair-db
        docker images
        docker run -d --name clair-db arminc/clair-db:latest
        docker run -p 6060:6060 --link clair-db:postgres -d --name clair arminc/clair-local-scan:latest
        docker ps
        curl -L https://github.com/arminc/clair-scanner/releases/download/v12/clair-scanner_linux_amd64 -o /usr/bin/clair-scanner
        chmod 777 /usr/bin/clair-scanner
        clair-scanner -h
        ls
        docker images
        cat /etc/lsb-release
        apt-get update
        apt-get install -y iproute2
        # apt-get update && apt-get install lxc-docker-1.5
        # sudo reboot
        _MY_IP=$(ifconfig eth0 | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1')
        # _CLAIR_IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' clair)
        # clair-scanner --ip $(ifconfig eth0 | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1') --clair http://$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' clair):6060 -t "High" --report="report.json" us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:latest
        # docker stop clair
        # docker rm clair
        # docker stop clair-db
        # docker rm clair-db
        # docker image rm $(clair_db)
        # apt-get install bridge-utils
        # sudo brctl show
        # dockerd --fixed-cidr=CIDR
        # docker network inspect bridge
        # _HOST_IP=$(ip -4 addr show docker0 | grep -Po 'inet \K[\d.]+')
        echo $_MY_IP
        clair-scanner -c http://localhost:6060 --ip ${_MY_IP} --report="report.json" -t "High" us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:${COMMIT_SHA}
        
  - id: list images
    name: 'gcr.io/cloud-builders/docker'
    args: ['image',  'ls']
  - id: list files
    name: 'bash'
    script: |
      ls -l
  # Docker Push step
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 
           'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:${COMMIT_SHA}']
artifacts:
  objects:
    location: 'gs://clair_scan_report_bucket'
    paths: ['report.json']
options:
  logging: CLOUD_LOGGING_ONLY
