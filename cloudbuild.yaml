steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:latest', '.']

  # Step 3: Install and run Clair to scan the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        docker pull quay.io/coreos/clair:latest
        docker create --name clair-scanner -p 6060:6060 quay.io/coreos/clair:latest
        docker cp clair-scanner:/go/bin/clair /usr/local/bin/clair
        docker rm clair-scanner
        clair-scanner -c http://localhost:6060 --report="clair-scan-report.json" us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:latest

  # Step 4: Check the scan results for critical vulnerabilities
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['container', 'images', 'describe', 'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:latest']

  # Step 5: Fail the build if critical vulnerabilities are found
  - name: 'gcr.io/cloud-builders/bash'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if grep -q "CRITICAL" clair-scan-report.json; then
          echo "Critical vulnerabilities found. Please remediate before deploying.";
          exit 1;
        else
          echo "No critical vulnerabilities found. Proceed with the deployment.";
          exit 0;
        fi

  # Step 6: Push the scanned image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['tag', 'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:latest', 'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:latest-scanned']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:latest-scanned']

  # Step 7: Store the scan report in a GCS bucket
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['cp', 'clair-scan-report.json', 'gs://clair-scan-report-bucket/clair-scan-report.json']

