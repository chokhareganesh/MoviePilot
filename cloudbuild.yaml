steps:
  - name: 'gcr.io/cloud-builders/docker'
    id: 'install_clair'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'docker-compose -f clair-config.yaml up -d'

  # Build your Docker image here using 'docker build' or any other method.
  # Replace the below build step with your actual build step.

  - name: 'gcr.io/cloud-builders/docker'
    id: 'build_image'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:$COMMIT_SHA'
      - '.'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'scan_image'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Pull the previously built image
        docker pull us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:$COMMIT_SHA

        # Scan the image using Clair
        docker-compose -f clair-config.yaml run --rm scanner

        # Check for critical vulnerabilities
        _CRITICAL_VULNERABILITIES=$(docker-compose -f clair-config.yaml exec -T scanner /bin/clair-scanner -l clair:6060 -r output.json --threshold="Critical" us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:$COMMIT_SHA)
        if [ -n "$_CRITICAL_VULNERABILITIES" ]; then
          echo "Found critical vulnerabilities: $_CRITICAL_VULNERABILITIES"
          exit 1
        fi

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push_image'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:$COMMIT_SHA'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'tag_image'
    args:
      - 'tag'
      - 'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:$COMMIT_SHA'
      - 'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:latest'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push_latest_image'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/mcmp-integration-qa/clair-scan-repo/appimage:latest'

artifacts:
  objects:
    location: 'gs://clair_scan_report_bucket/reports/'
    paths:
      - 'output.json'
